(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'Table' object has no attribute '<built-in function id>'"
p3
sS'layer'
p4
S'/home/eddgt/public_html/web2py/web2py/applications/blog/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n\n    if you need a simple wiki simply replace the two lines below with:\n    return auth.wiki()\n    """\n    response.flash = T("Welcome to my Web Site Powered by web2py!")\n    #return dict(message=T(\'Hello World\'))\n    return dict(facturas=db().select(db.factura.ALL))\n    #agrepado segun tutorial 19052014:15hrs\n    #return dict(articulos=db().select(db.articulo.ALL))\n\n\n#def view_post():\n #   id_articulo = request.args(0)\n  #  articulo = db.articulo[id_articulo] or    redirect(URL(r=request,f=\'index\'))\n   # if auth.is_logged_in():\n    #    db.comentario.articulo.default = articulo.id\n     #   db.comentario.autor.default = auth.user.id\n      #  form = crud.create(db.comentario)\n    #else:\n     #   form = A("inicie sesi\xc3\xb3n para        comentar",_href=URL(r=request,f=\'user/login\'))\n    #comentarios =    db(db.comentario.articulo==articulo.id).select(db.comentario.ALL)\n    #return dict(articulo=articulo, form=form,\n    #comentarios=comentarios)\n\ndef view_factura():\n    id_factura = request.args(0)\n    factura = db.factura[id] or redirect(URL(r=request,f=\'index\'))\n    if auth.is_logged_in():\n        db.item_factura.factura.default = factura.id\n        db.item_factura.autor.default = auth.user.id\n        form = crud.create(db.item_factura)\n    else:\n        form = A("inicie sesi\xc3\xb3n para agregar items",_href=URL(r=request,f=\'user/login\'))\n    facturas_det =    db(db.item_factura.factura==factura.id).select(db.item_factura.ALL)\n    return dict(factura=factura, form=form,\n    facturas_det=facturas_det)\n\n\n\n\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/manage_users (requires membership in\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\nresponse._vars=response._caller(view_factura)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/eddgt/public_html/web2py/web2py/gluon/restricted.py", line 220, in restricted\n    exec ccode in environment\n  File "/home/eddgt/public_html/web2py/web2py/applications/blog/controllers/default.py", line 112, in <module>\n  File "/home/eddgt/public_html/web2py/web2py/gluon/globals.py", line 385, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/eddgt/public_html/web2py/web2py/applications/blog/controllers/default.py", line 43, in view_factura\n    factura = db.factura[id] or redirect(URL(r=request,f=\'index\'))\n  File "/home/eddgt/public_html/web2py/web2py/gluon/dal.py", line 8916, in __getitem__\n    return ogetattr(self, str(key))\nAttributeError: \'Table\' object has no attribute \'<built-in function id>\'\n'
p11
s.